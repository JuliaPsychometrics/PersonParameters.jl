import{_ as a,c as e,a5 as n,o as t}from"./chunks/framework.CD9RqsIt.js";const m=JSON.parse('{"title":"Getting started","description":"","frontmatter":{},"headers":[],"relativePath":"getting-started.md","filePath":"getting-started.md","lastUpdated":null}'),i={name:"getting-started.md"};function p(l,s,r,o,d,c){return t(),e("div",null,s[0]||(s[0]=[n(`<h1 id="Getting-started" tabindex="-1">Getting started <a class="header-anchor" href="#Getting-started" aria-label="Permalink to &quot;Getting started {#Getting-started}&quot;">​</a></h1><p>After successful <a href="/PersonParameters.jl/dev/index#installation">installation</a> you are ready to estimate person parameters. In this simple example we will estimate person parameters for a simulated data set assuming a <a href="https://en.wikipedia.org/wiki/Rasch_model" target="_blank" rel="noreferrer">Rasch model</a>.</p><h2 id="Simulating-data" tabindex="-1">Simulating data <a class="header-anchor" href="#Simulating-data" aria-label="Permalink to &quot;Simulating data {#Simulating-data}&quot;">​</a></h2><p>First, we need to aquire item parameters. In a Rasch model there is only a single item parameter, the <em>item difficulty</em> (<code>b</code>). Assuming a test with 10 items we therefore need 10 item difficulty parameters. For this example we draw these from a standard normal distribution.</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">difficulties </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> randn</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>10-element Vector{Float64}:</span></span>
<span class="line"><span> -1.0404288511750712</span></span>
<span class="line"><span>  0.2146514070141379</span></span>
<span class="line"><span> -0.3562695662666039</span></span>
<span class="line"><span> -1.4314998994618426</span></span>
<span class="line"><span> -0.499040165316529</span></span>
<span class="line"><span> -0.07974473485930385</span></span>
<span class="line"><span>  0.40123961808781694</span></span>
<span class="line"><span>  0.793190395589391</span></span>
<span class="line"><span>  1.1926174603489277</span></span>
<span class="line"><span>  1.0964576513238238</span></span></code></pre></div><p>Next, responses need to be simulated. Assuming 20 test-takers we simply randomly generate a response matrix where each test-taker responds to each item.</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">responses </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> rand</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">20</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0.5</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>20×10 BitMatrix:</span></span>
<span class="line"><span> 1  0  0  0  1  1  1  1  0  0</span></span>
<span class="line"><span> 1  0  1  0  0  0  0  0  1  1</span></span>
<span class="line"><span> 1  0  0  0  1  0  0  1  0  0</span></span>
<span class="line"><span> 0  1  0  0  0  1  0  1  1  0</span></span>
<span class="line"><span> 1  0  0  1  1  1  0  0  0  1</span></span>
<span class="line"><span> 1  0  1  0  1  0  0  0  1  1</span></span>
<span class="line"><span> 0  0  0  0  1  1  1  1  1  0</span></span>
<span class="line"><span> 1  0  1  0  0  1  1  1  1  0</span></span>
<span class="line"><span> 1  1  0  1  0  0  0  1  0  1</span></span>
<span class="line"><span> 1  1  0  1  0  1  1  1  1  0</span></span>
<span class="line"><span> 1  0  1  0  1  1  0  0  1  0</span></span>
<span class="line"><span> 1  0  0  1  0  1  0  1  1  0</span></span>
<span class="line"><span> 0  1  0  0  1  1  1  1  0  0</span></span>
<span class="line"><span> 0  1  1  1  0  0  1  1  0  0</span></span>
<span class="line"><span> 1  0  0  1  0  1  1  0  1  1</span></span>
<span class="line"><span> 1  0  0  1  1  0  0  0  0  1</span></span>
<span class="line"><span> 1  1  1  1  1  0  1  0  1  0</span></span>
<span class="line"><span> 1  1  1  0  0  0  0  1  0  0</span></span>
<span class="line"><span> 1  1  1  0  1  0  0  0  1  1</span></span>
<span class="line"><span> 1  0  1  0  0  0  1  1  1  0</span></span></code></pre></div><h2 id="Estimation-of-person-parameters" tabindex="-1">Estimation of person parameters <a class="header-anchor" href="#Estimation-of-person-parameters" aria-label="Permalink to &quot;Estimation of person parameters {#Estimation-of-person-parameters}&quot;">​</a></h2><p>Given the item parameters <code>difficulties</code> and response matrix <code>responses</code>, we are ready to estimate person parameters. To do this only a single call to <a href="/PersonParameters.jl/dev/api#PersonParameters.person_parameters-Tuple{Type{&lt;:AbstractItemResponseModels.ItemResponseModel}, AbstractVector, Any, PersonParameterAlgorithm}"><code>person_parameters</code></a> is required. <a href="/PersonParameters.jl/dev/api#PersonParameters.person_parameters-Tuple{Type{&lt;:AbstractItemResponseModels.ItemResponseModel}, AbstractVector, Any, PersonParameterAlgorithm}"><code>person_parameters</code></a> accepts 4 arguments: the model type <code>M</code>, some <code>responses</code>, item parameters <code>betas</code> and an estimation algorithm <code>alg</code>. For this example we chose simple maximum likelihood estimation using the <a href="/PersonParameters.jl/dev/api#PersonParameters.MLE"><code>MLE</code></a> algorithm<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup>.</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">using</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> PersonParameters</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">pp </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> person_parameters</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(OnePL, responses, difficulties, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">MLE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">())</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>20-element PersonParameterResult{OneParameterLogisticModel, PersonParameter{Float64}, MLE{Roots.Secant}}:</span></span>
<span class="line"><span> PersonParameter{Float64}(0.037961098910380374, 0.6828137955581843)</span></span>
<span class="line"><span> PersonParameter{Float64}(-0.4347765337022231, 0.6964062194255234)</span></span>
<span class="line"><span> PersonParameter{Float64}(-0.9459744421932545, 0.7393266417630334)</span></span>
<span class="line"><span> PersonParameter{Float64}(-0.43477653370222313, 0.6964062194255234)</span></span>
<span class="line"><span> PersonParameter{Float64}(0.037961098910380436, 0.6828137955581843)</span></span>
<span class="line"><span> PersonParameter{Float64}(0.0379610989103803, 0.6828137955581843)</span></span>
<span class="line"><span> PersonParameter{Float64}(0.037961098910380256, 0.6828137955581843)</span></span>
<span class="line"><span> PersonParameter{Float64}(0.5086219559336693, 0.6934083716370472)</span></span>
<span class="line"><span> PersonParameter{Float64}(0.03796109891038032, 0.6828137955581843)</span></span>
<span class="line"><span> PersonParameter{Float64}(1.0135193279697836, 0.7335819408873576)</span></span>
<span class="line"><span> PersonParameter{Float64}(0.037961098910380305, 0.6828137955581843)</span></span>
<span class="line"><span> PersonParameter{Float64}(0.03796109891038044, 0.6828137955581843)</span></span>
<span class="line"><span> PersonParameter{Float64}(0.037961098910380464, 0.6828137955581843)</span></span>
<span class="line"><span> PersonParameter{Float64}(0.03796109891038037, 0.6828137955581843)</span></span>
<span class="line"><span> PersonParameter{Float64}(0.5086219559336694, 0.6934083716370472)</span></span>
<span class="line"><span> PersonParameter{Float64}(-0.43477653370222324, 0.6964062194255234)</span></span>
<span class="line"><span> PersonParameter{Float64}(1.0135193279697836, 0.7335819408873576)</span></span>
<span class="line"><span> PersonParameter{Float64}(-0.43477653370222313, 0.6964062194255234)</span></span>
<span class="line"><span> PersonParameter{Float64}(0.5086219559336693, 0.6934083716370472)</span></span>
<span class="line"><span> PersonParameter{Float64}(0.03796109891038041, 0.6828137955581843)</span></span></code></pre></div><p>The resulting <a href="/PersonParameters.jl/dev/api#PersonParameters.PersonParameterResult"><code>PersonParameterResult</code></a> object contains the estimated person parameters for all 20 test-takers. The estimate of a single person can be obtained by indexing the <code>pp</code> object.</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">pp17 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> pp[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">17</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>PersonParameter{Float64}(1.0135193279697836, 0.7335819408873576)</span></span></code></pre></div><p>The <a href="/PersonParameters.jl/dev/api#PersonParameters.PersonParameter"><code>PersonParameter</code></a> object consists of the estimate and standard error of estimation for a single test-taker. To access the values you can use <a href="/PersonParameters.jl/dev/api#PersonParameters.value-Tuple{PersonParameter}"><code>value</code></a> and <a href="/PersonParameters.jl/dev/api#PersonParameters.se-Tuple{PersonParameterAlgorithm, Type{&lt;:AbstractItemResponseModels.ItemResponseModel}, Any, Any}"><code>se</code></a> respectivelty.</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">value</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(pp17)</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>1.0135193279697836</span></span></code></pre></div><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">se</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(pp17)</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>0.7335819408873576</span></span></code></pre></div><h2 id="How-to-continue-from-here?" tabindex="-1">How to continue from here? <a class="header-anchor" href="#How-to-continue-from-here?" aria-label="Permalink to &quot;How to continue from here? {#How-to-continue-from-here?}&quot;">​</a></h2><p>For specific use cases see one of our guides:</p><ul><li><a href="/PersonParameters.jl/dev/guides/adaptive-testing">Online estimation of ability in adaptive testing</a></li></ul><p>Or you can dive straight into the <a href="/PersonParameters.jl/dev/api">API Reference</a>.</p><hr class="footnotes-sep"><section class="footnotes"><ol class="footnotes-list"><li id="fn1" class="footnote-item"><p>For a full list of implemented algorithms see the <a href="/PersonParameters.jl/dev/api#types">API Reference</a>. <a href="#fnref1" class="footnote-backref">↩︎</a></p></li></ol></section>`,27)]))}const g=a(i,[["render",p]]);export{m as __pageData,g as default};
