import{_ as i,c as a,a5 as n,o as t}from"./chunks/framework.v1VUEFIs.js";const c=JSON.parse('{"title":"Online estimation of ability in adaptive testing","description":"","frontmatter":{},"headers":[],"relativePath":"guides/adaptive-testing.md","filePath":"guides/adaptive-testing.md","lastUpdated":null}'),e={name:"guides/adaptive-testing.md"};function p(l,s,h,k,d,r){return t(),a("div",null,s[0]||(s[0]=[n(`<h1 id="Online-estimation-of-ability-in-adaptive-testing" tabindex="-1">Online estimation of ability in adaptive testing <a class="header-anchor" href="#Online-estimation-of-ability-in-adaptive-testing" aria-label="Permalink to &quot;Online estimation of ability in adaptive testing {#Online-estimation-of-ability-in-adaptive-testing}&quot;">​</a></h1><p>In <a href="https://en.wikipedia.org/wiki/Computerized_adaptive_testing" target="_blank" rel="noreferrer">adaptive testing</a> the updating of the ability estimate plays a central role. Generally, adaptive testing consists of the following steps:</p><ol><li><p>Select an optimal item from an item pool given the current ability estimate of the test-taker</p></li><li><p>Present the item and await the response of the test-taker</p></li><li><p>Update the ability estimate of the test-taker given the new responses</p></li></ol><p>Additionally we need to provide an inital ability estimate for the test-taker before the first item is responded to. Also a stopping criterion is required to terminate the test when the criterion is met.</p><p>In this guide we are going to implement a simple adaptive test using PersonParameters.jl to update the ability values in step 3 of the testing procedure.</p><h2 id="preparation" tabindex="-1">Preparation <a class="header-anchor" href="#preparation" aria-label="Permalink to &quot;Preparation&quot;">​</a></h2><h3 id="Setting-up-the-item-pool" tabindex="-1">Setting up the item pool <a class="header-anchor" href="#Setting-up-the-item-pool" aria-label="Permalink to &quot;Setting up the item pool {#Setting-up-the-item-pool}&quot;">​</a></h3><p>To keep things simple our item pool will consist of 100 items with item parameters given by a Rasch model. We draw the item difficulty values from a standard normal distribution.</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">item_pool </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> randn</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">100</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>100-element Vector{Float64}:</span></span>
<span class="line"><span> -1.9085844610100242</span></span>
<span class="line"><span> -0.3193501309246828</span></span>
<span class="line"><span> -1.3706003089561634</span></span>
<span class="line"><span> -0.4765395263704167</span></span>
<span class="line"><span> -0.18406197886030887</span></span>
<span class="line"><span>  0.07956351890906067</span></span>
<span class="line"><span>  0.9653035713225864</span></span>
<span class="line"><span> -0.7412845170310357</span></span>
<span class="line"><span> -0.6708770393386021</span></span>
<span class="line"><span>  2.210995604236078</span></span>
<span class="line"><span>  ⋮</span></span>
<span class="line"><span>  0.17993853097914825</span></span>
<span class="line"><span>  0.26604455391591014</span></span>
<span class="line"><span> -0.388363107314558</span></span>
<span class="line"><span> -0.13520179370852234</span></span>
<span class="line"><span>  0.290395546661944</span></span>
<span class="line"><span> -0.198443768875884</span></span>
<span class="line"><span>  1.0461801589213602</span></span>
<span class="line"><span> -0.41526658756575163</span></span>
<span class="line"><span>  0.5608774661943376</span></span></code></pre></div><h3 id="Defining-the-item-selection-procedure" tabindex="-1">Defining the item selection procedure <a class="header-anchor" href="#Defining-the-item-selection-procedure" aria-label="Permalink to &quot;Defining the item selection procedure {#Defining-the-item-selection-procedure}&quot;">​</a></h3><p>Next, we need to define a function to select the optimal item (step 1). In adaptive testing this is usually the item that maximises the item information given the current ability estimate.</p><p>Therefore we need a function that takes the <code>item_pool</code> and current ability estimate <code>theta</code> as inputs, calculates the information for each item in <code>item_pool</code> at <code>theta</code> and returns the id of the item with maximum information.</p><p>Information functions for the Rasch model are available in <a href="https://github.com/JuliaPsychometrics/ItemResponseFunctions.jl" target="_blank" rel="noreferrer"><code>ItemResponseFunctions.jl</code></a>.</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">using</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ItemResponseFunctions</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> OnePL, information</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> select_item</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(item_pool, theta)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    infos </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">information</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(OnePL, theta, beta) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> beta </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">in</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> item_pool]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> argmax</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(infos)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">end</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>select_item (generic function with 1 method)</span></span></code></pre></div><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>For simplicity items are selected with replacement from the item pool.</p><p>In a real-world application one would prefer to track the exposed items and only select items that weren&#39;t previously exposed to the test-taker.</p></div><p>Calling the function at <code>theta = 0.0</code> returns a valid item id.</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">select_item</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(item_pool, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>68</span></span></code></pre></div><h3 id="Defining-the-stopping-criterion" tabindex="-1">Defining the stopping criterion <a class="header-anchor" href="#Defining-the-stopping-criterion" aria-label="Permalink to &quot;Defining the stopping criterion {#Defining-the-stopping-criterion}&quot;">​</a></h3><p>Our stopping criterion in this example is also based on the ability estimate. The test should only be stopped if the accuracy of the estimate is higher than a predefined threshold. In other words: We stop the test only if the standard error of the ability estimate is below <code>threshold</code>.</p><p>The stopping criterion returns <code>false</code> if the criterion is not met, meaning the test continues and a new item is selected. If the stopping criterion is met, <code>true</code> is returned and the test is stopped.</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">using</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> PersonParameters</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> PersonParameter, se</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> stop</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(estimate</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">PersonParameter</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; threshold </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0.5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> se</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(estimate) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> threshold</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">end</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>stop (generic function with 1 method)</span></span></code></pre></div><p>A small test confirms the stopping rule works as intended.</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">stop</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">PersonParameter</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.6</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># should return false</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>false</span></span></code></pre></div><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">stop</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">PersonParameter</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># should return true</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>true</span></span></code></pre></div><h2 id="Implementing-the-test-logic" tabindex="-1">Implementing the test logic <a class="header-anchor" href="#Implementing-the-test-logic" aria-label="Permalink to &quot;Implementing the test logic {#Implementing-the-test-logic}&quot;">​</a></h2><p>Now that the item selection and stopping criterion are defined, we can move on to code the test logic. Recall that we must</p><ol><li><p>Await the response of the test-taker,</p></li><li><p>Update the ability value given the new response,</p></li><li><p>Evaluate the stopping rule and either present the next item to the test-taker according to <code>select_item</code>, or stop the test.</p></li></ol><p>Also we likely want to store responses, administered items, and intermediate ability values like so.</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">responses </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Int[]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">estimates </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">PersonParameter</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Inf</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">items </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">rand</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">eachindex</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(item_pool))]</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>1-element Vector{Int64}:</span></span>
<span class="line"><span> 1</span></span></code></pre></div><div class="info custom-block"><p class="custom-block-title">INFO</p><p>The objects <code>estimates</code> and <code>items</code> already include initial values. For the ability estimate the initial value was fixed at <code>0.0</code>. For the initial item a random item was chosen from the item pool.</p></div><p>The following function <code>update</code> implements the test logic as described above. It makes use of <a href="https://github.com/JuliaGizmos/Observables.jl" target="_blank" rel="noreferrer"><code>Observables.jl</code></a>, running every time a new <code>response</code> is observed.</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">using</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Observables</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Observable, on</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">using</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> PersonParameters</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> person_parameter, value, WLE</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">response </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Observable</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">is_stopped </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Observable</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">update </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> on</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(response) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">do</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> y</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    if</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> !</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">is_stopped[]</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        push!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(responses, y)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        @info</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;new response: y = </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">$y</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        theta </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> person_parameter</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(OnePL, responses, item_pool[items], </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">WLE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">())</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        push!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(estimates, theta)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        @info</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;new ability estimate: theta = </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">$(value(theta))</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">, se = </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">$(se(theta))</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        if</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> stop</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(theta)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">            @info</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;stopping criterion reached: se = </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">$(se(theta))</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &lt; 0.5&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            is_stopped[] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> true</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        else</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">            @info</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;stopping criterion not reached: se = </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">$(se(theta))</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &gt; 0.5&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            new_item </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> select_item</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(item_pool, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">value</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(theta))</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">            push!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(items, new_item)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">            @info</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;current item: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">$(new_item)</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">            return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> new_item</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        end</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    end</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">end</span></span></code></pre></div><h3 id="Step-by-step-explanation" tabindex="-1">Step-by-step explanation <a class="header-anchor" href="#Step-by-step-explanation" aria-label="Permalink to &quot;Step-by-step explanation {#Step-by-step-explanation}&quot;">​</a></h3><p>The first part of the implementation is to define our observables. On one hand we need an observable for new responses, <code>response</code>. The test logic will run whenever <code>response</code> is updated.</p><p>On the other hand we need an observable to tell us if the test is active or stopped according to our stoppping rule. The observable <code>is_stopped</code> tells us exactly that.</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">response </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Observable</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">is_stopped </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Observable</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>The function <code>update</code> contains the updating procedure once a new response is observed. It will run always if <code>response</code> is updated and the test is not stopped, c.f. <code>is_stopped[] == false</code>.</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">update </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> on</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(response) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">do</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> y</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    if</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> !</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">is_stopped[]</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        # ...</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    end</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">end</span></span></code></pre></div><p>Within <code>update</code> the steps described above are executed. First, we commit the new response to storage</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark has-highlighted vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">update </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> on</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(response) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">do</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> y</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    if</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> !</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">is_stopped[]</span></span>
<span class="line highlighted"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        push!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(responses, y) </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        # ...</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">end</span></span></code></pre></div><p>Then the new ability is estimated using <a href="/PersonParameters.jl/previews/PR32/api#PersonParameters.person_parameter-Tuple{Type{&lt;:AbstractItemResponseModels.ItemResponseModel}, Any, Any, PersonParameterAlgorithm}"><code>person_parameter</code></a> and also commited to storage. For adaptive testing purposes we choose the <a href="/PersonParameters.jl/previews/PR32/api#PersonParameters.WLE"><code>WLE</code></a> algorithm, since it provides ability estimates even if all responses are 0 or 1 respectively.</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark has-highlighted vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">update </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> on</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(response) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">do</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> y</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    if</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> !</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">is_stopped[]</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        push!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(responses, y)</span></span>
<span class="line"></span>
<span class="line highlighted"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        theta </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> person_parameter</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(OnePL, responses, item_pool[items], </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">WLE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">())  </span></span>
<span class="line highlighted"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        push!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(estimates, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">value</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(theta))  </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        # ...</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    end</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">end</span></span></code></pre></div><p>Finally the stopping criterion is evaluated. If it is reached, the test is terminated by setting <code>is_stopped[] = true</code>. Otherwise, a new item is selected by <code>select_item</code>, commited to storage and provided to the test-taker.</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark has-highlighted vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">update </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> on</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(response) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">do</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> y</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    if</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> !</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">is_stopped[]</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        push!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(responses, y)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        theta </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> person_parameter</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(OnePL, responses, item_pool[items], </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">WLE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">())</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        push!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(estimates, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">value</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(theta))</span></span>
<span class="line"></span>
<span class="line highlighted"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        if</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> stop</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(theta) </span></span>
<span class="line highlighted"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            is_stopped[] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> true</span></span>
<span class="line highlighted"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        else</span></span>
<span class="line highlighted"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            new_item </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> select_item</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(item_pool, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">value</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(theta)) </span></span>
<span class="line highlighted"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">            push!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(items, new_item) </span></span>
<span class="line highlighted"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">            return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> new_item </span></span>
<span class="line highlighted"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        end</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    end</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">end</span></span></code></pre></div><div class="info custom-block"><p class="custom-block-title">INFO</p><p>In the original definition of <code>update</code> <code>@info</code> statements are placed throughout for logging purposes.</p></div><h2 id="Administering-the-test" tabindex="-1">Administering the test <a class="header-anchor" href="#Administering-the-test" aria-label="Permalink to &quot;Administering the test {#Administering-the-test}&quot;">​</a></h2><p>With all our test logic in place we can administer the test to a virtual test-taker. We assume that the test taker has a true ability and their response follows the Rasch model. Thus, we can define a <code>respond</code> function that gives us a random response to the item, given the expected probability of a correct response under the Rasch model.</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">using</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Distributions</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Bernoulli</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">using</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ItemResponseFunctions</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> irf</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> respond</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(beta; true_theta </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    prob </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> irf</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(OnePL, true_theta, beta, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">rand</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Bernoulli</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(prob)))</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">end</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>respond (generic function with 1 method)</span></span></code></pre></div><p>The virtual test-taker then responds to the administered items until the stopping criterion is met.</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">while</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> !</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">is_stopped[]</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # get the item difficulty</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    current_item </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> last</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(items)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    beta </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> item_pool[current_item]</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # respond</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    response[] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> respond</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(beta)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">end</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>[ Info: new response: y = 1</span></span>
<span class="line"><span>[ Info: new ability estimate: theta = -0.8099721723419143, se = 2.309401076758503</span></span>
<span class="line"><span>[ Info: stopping criterion not reached: se = 2.309401076758503 &gt; 0.5</span></span>
<span class="line"><span>[ Info: current item: 58</span></span>
<span class="line"><span>[ Info: new response: y = 0</span></span>
<span class="line"><span>[ Info: new ability estimate: theta = -1.3638735496687246, se = 1.4669900004712164</span></span>
<span class="line"><span>[ Info: stopping criterion not reached: se = 1.4669900004712164 &gt; 0.5</span></span>
<span class="line"><span>[ Info: current item: 3</span></span>
<span class="line"><span>[ Info: new response: y = 1</span></span>
<span class="line"><span>[ Info: new ability estimate: theta = -0.8180648042890541, se = 1.221596564798906</span></span>
<span class="line"><span>[ Info: stopping criterion not reached: se = 1.221596564798906 &gt; 0.5</span></span>
<span class="line"><span>[ Info: current item: 58</span></span>
<span class="line"><span>[ Info: new response: y = 1</span></span>
<span class="line"><span>[ Info: new ability estimate: theta = -0.32297299266066554, se = 1.1153930153077691</span></span>
<span class="line"><span>[ Info: stopping criterion not reached: se = 1.1153930153077691 &gt; 0.5</span></span>
<span class="line"><span>[ Info: current item: 2</span></span>
<span class="line"><span>[ Info: new response: y = 1</span></span>
<span class="line"><span>[ Info: new ability estimate: theta = 0.14767452484942956, se = 1.063568994642235</span></span>
<span class="line"><span>[ Info: stopping criterion not reached: se = 1.063568994642235 &gt; 0.5</span></span>
<span class="line"><span>[ Info: current item: 92</span></span>
<span class="line"><span>[ Info: new response: y = 1</span></span>
<span class="line"><span>[ Info: new ability estimate: theta = 0.6163450733547612, se = 1.0391410827075063</span></span>
<span class="line"><span>[ Info: stopping criterion not reached: se = 1.0391410827075063 &gt; 0.5</span></span>
<span class="line"><span>[ Info: current item: 32</span></span>
<span class="line"><span>[ Info: new response: y = 0</span></span>
<span class="line"><span>[ Info: new ability estimate: theta = 0.2924461709293114, se = 0.8710063456102501</span></span>
<span class="line"><span>[ Info: stopping criterion not reached: se = 0.8710063456102501 &gt; 0.5</span></span>
<span class="line"><span>[ Info: current item: 96</span></span>
<span class="line"><span>[ Info: new response: y = 0</span></span>
<span class="line"><span>[ Info: new ability estimate: theta = 0.02506826847145942, se = 0.7765744102156711</span></span>
<span class="line"><span>[ Info: stopping criterion not reached: se = 0.7765744102156711 &gt; 0.5</span></span>
<span class="line"><span>[ Info: current item: 79</span></span>
<span class="line"><span>[ Info: new response: y = 1</span></span>
<span class="line"><span>[ Info: new ability estimate: theta = 0.27362580920349505, se = 0.7409616105883491</span></span>
<span class="line"><span>[ Info: stopping criterion not reached: se = 0.7409616105883491 &gt; 0.5</span></span>
<span class="line"><span>[ Info: current item: 42</span></span>
<span class="line"><span>[ Info: new response: y = 0</span></span>
<span class="line"><span>[ Info: new ability estimate: theta = 0.06104764935875984, se = 0.6827492937228274</span></span>
<span class="line"><span>[ Info: stopping criterion not reached: se = 0.6827492937228274 &gt; 0.5</span></span>
<span class="line"><span>[ Info: current item: 48</span></span>
<span class="line"><span>[ Info: new response: y = 0</span></span>
<span class="line"><span>[ Info: new ability estimate: theta = -0.1300889399884594, se = 0.6413268157271816</span></span>
<span class="line"><span>[ Info: stopping criterion not reached: se = 0.6413268157271816 &gt; 0.5</span></span>
<span class="line"><span>[ Info: current item: 95</span></span>
<span class="line"><span>[ Info: new response: y = 0</span></span>
<span class="line"><span>[ Info: new ability estimate: theta = -0.3039828466805544, se = 0.6103446676458212</span></span>
<span class="line"><span>[ Info: stopping criterion not reached: se = 0.6103446676458212 &gt; 0.5</span></span>
<span class="line"><span>[ Info: current item: 46</span></span>
<span class="line"><span>[ Info: new response: y = 0</span></span>
<span class="line"><span>[ Info: new ability estimate: theta = -0.4647848285824869, se = 0.5862946551081328</span></span>
<span class="line"><span>[ Info: stopping criterion not reached: se = 0.5862946551081328 &gt; 0.5</span></span>
<span class="line"><span>[ Info: current item: 4</span></span>
<span class="line"><span>[ Info: new response: y = 1</span></span>
<span class="line"><span>[ Info: new ability estimate: theta = -0.31806563476643934, se = 0.5606163850467831</span></span>
<span class="line"><span>[ Info: stopping criterion not reached: se = 0.5606163850467831 &gt; 0.5</span></span>
<span class="line"><span>[ Info: current item: 2</span></span>
<span class="line"><span>[ Info: new response: y = 0</span></span>
<span class="line"><span>[ Info: new ability estimate: theta = -0.456548088082302, se = 0.5415356093594295</span></span>
<span class="line"><span>[ Info: stopping criterion not reached: se = 0.5415356093594295 &gt; 0.5</span></span>
<span class="line"><span>[ Info: current item: 56</span></span>
<span class="line"><span>[ Info: new response: y = 1</span></span>
<span class="line"><span>[ Info: new ability estimate: theta = -0.327251565883756, se = 0.5212687420604935</span></span>
<span class="line"><span>[ Info: stopping criterion not reached: se = 0.5212687420604935 &gt; 0.5</span></span>
<span class="line"><span>[ Info: current item: 2</span></span>
<span class="line"><span>[ Info: new response: y = 1</span></span>
<span class="line"><span>[ Info: new ability estimate: theta = -0.20594676096866088, se = 0.5046800914037389</span></span>
<span class="line"><span>[ Info: stopping criterion not reached: se = 0.5046800914037389 &gt; 0.5</span></span>
<span class="line"><span>[ Info: current item: 43</span></span>
<span class="line"><span>[ Info: new response: y = 1</span></span>
<span class="line"><span>[ Info: new ability estimate: theta = -0.09122983058723957, se = 0.49089385133439956</span></span>
<span class="line"><span>[ Info: stopping criterion reached: se = 0.49089385133439956 &lt; 0.5</span></span></code></pre></div><p>As is evident from the logging statements, the test stops after 18 items have been administered. The final estimate is about <code>-0.09</code> with a standard error of <code>0.49</code>.</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">last</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(estimates)</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>PersonParameter{Float64}(-0.09122983058723957, 0.49089385133439956)</span></span></code></pre></div><p>The following table contains all tracked data from the virtual test.</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">using</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> MarkdownTables</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">init </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (; step </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, item </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, response </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, estimate </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> value</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(estimates[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]), se </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> se</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(estimates[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]))</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">data </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [(;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    step </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> i,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    item </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> items[i],</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    response </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> responses[i],</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    estimate </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> value</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(estimates[i </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    se </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> se</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(estimates[i </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">])</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> i </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">in</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> eachindex</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(items)]</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">markdown_table</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">vcat</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(init, data))</span></span></code></pre></div><table tabindex="0"><thead><tr><th>step</th><th>item</th><th>response</th><th>estimate</th><th>se</th></tr></thead><tbody><tr><td>0</td><td></td><td></td><td>0.0</td><td>Inf</td></tr><tr><td>1</td><td>1</td><td>1</td><td>-0.8099721723419143</td><td>2.309401076758503</td></tr><tr><td>2</td><td>58</td><td>0</td><td>-1.3638735496687246</td><td>1.4669900004712164</td></tr><tr><td>3</td><td>3</td><td>1</td><td>-0.8180648042890541</td><td>1.221596564798906</td></tr><tr><td>4</td><td>58</td><td>1</td><td>-0.32297299266066554</td><td>1.1153930153077691</td></tr><tr><td>5</td><td>2</td><td>1</td><td>0.14767452484942956</td><td>1.063568994642235</td></tr><tr><td>6</td><td>92</td><td>1</td><td>0.6163450733547612</td><td>1.0391410827075063</td></tr><tr><td>7</td><td>32</td><td>0</td><td>0.2924461709293114</td><td>0.8710063456102501</td></tr><tr><td>8</td><td>96</td><td>0</td><td>0.02506826847145942</td><td>0.7765744102156711</td></tr><tr><td>9</td><td>79</td><td>1</td><td>0.27362580920349505</td><td>0.7409616105883491</td></tr><tr><td>10</td><td>42</td><td>0</td><td>0.06104764935875984</td><td>0.6827492937228274</td></tr><tr><td>11</td><td>48</td><td>0</td><td>-0.1300889399884594</td><td>0.6413268157271816</td></tr><tr><td>12</td><td>95</td><td>0</td><td>-0.3039828466805544</td><td>0.6103446676458212</td></tr><tr><td>13</td><td>46</td><td>0</td><td>-0.4647848285824869</td><td>0.5862946551081328</td></tr><tr><td>14</td><td>4</td><td>1</td><td>-0.31806563476643934</td><td>0.5606163850467831</td></tr><tr><td>15</td><td>2</td><td>0</td><td>-0.456548088082302</td><td>0.5415356093594295</td></tr><tr><td>16</td><td>56</td><td>1</td><td>-0.327251565883756</td><td>0.5212687420604935</td></tr><tr><td>17</td><td>2</td><td>1</td><td>-0.20594676096866088</td><td>0.5046800914037389</td></tr><tr><td>18</td><td>43</td><td>1</td><td>-0.09122983058723957</td><td>0.49089385133439956</td></tr></tbody></table><h2 id="Additional-information" tabindex="-1">Additional information <a class="header-anchor" href="#Additional-information" aria-label="Permalink to &quot;Additional information {#Additional-information}&quot;">​</a></h2><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">using</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Pkg</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Pkg</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">status</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>Status \`~/work/PersonParameters.jl/PersonParameters.jl/docs/Project.toml\`</span></span>
<span class="line"><span>  [31c24e10] Distributions v0.25.113</span></span>
<span class="line"><span>  [e30172f5] Documenter v1.8.0</span></span>
<span class="line"><span>  [4710194d] DocumenterVitepress v0.1.3</span></span>
<span class="line"><span>  [18e85bec] ItemResponseFunctions v0.2.0</span></span>
<span class="line"><span>  [1862ce21] MarkdownTables v1.1.0</span></span>
<span class="line"><span>  [510215fc] Observables v0.5.5</span></span>
<span class="line"><span>  [ede86a6c] PersonParameters v0.2.1 \`~/work/PersonParameters.jl/PersonParameters.jl\`</span></span></code></pre></div>`,68)]))}const g=i(e,[["render",p]]);export{c as __pageData,g as default};
